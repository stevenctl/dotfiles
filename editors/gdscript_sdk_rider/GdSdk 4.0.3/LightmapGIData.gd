extends Resource
#brief Contains baked lightmap and dynamic object probe data for [LightmapGI].
#desc [LightmapGIData] contains baked lightmap and dynamic object probe data for [LightmapGI]. It is replaced every time lightmaps are baked in [LightmapGI].
class_name LightmapGIData


#desc The lightmap atlas texture generated by the lightmapper.
var light_texture: TextureLayered:
	get = get_light_texture, set = set_light_texture



#desc Adds an object that is considered baked within this [LightmapGIData].
func add_user(path: NodePath, uv_scale: Rect2, slice_index: int, sub_instance: int) -> void:
	pass;

#desc Clear all objects that are considered baked within this [LightmapGIData].
func clear_users() -> void:
	pass;

#desc Returns the number of objects that are considered baked within this [LightmapGIData].
func get_user_count() -> int:
	pass;

#desc Returns the [NodePath] of the baked object at index [param user_idx].
func get_user_path(user_idx: int) -> NodePath:
	pass;

#desc If [code]true[/code], lightmaps were baked with directional information. See also [member LightmapGI.directional].
func is_using_spherical_harmonics() -> bool:
	pass;

#desc If [param uses_spherical_harmonics] is [code]true[/code], tells the engine to treat the lightmap data as if it was baked with directional information.
#desc [b]Note:[/b] Changing this value on already baked lightmaps will not cause them to be baked again. This means the material appearance will look incorrect until lightmaps are baked again, in which case the value set here is discarded as the entire [LightmapGIData] resource is replaced by the lightmapper.
func set_uses_spherical_harmonics(uses_spherical_harmonics: bool) -> void:
	pass;


func get_light_texture() -> TextureLayered:
	return light_texture

func set_light_texture(value: TextureLayered) -> void:
	light_texture = value

